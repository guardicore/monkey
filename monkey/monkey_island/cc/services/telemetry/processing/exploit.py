import copy

import dateutil

from monkey_island.cc.models import Monkey
from monkey_island.cc.server_utils.encryption import get_datastore_encryptor
from monkey_island.cc.services.edge.displayed_edge import EdgeService
from monkey_island.cc.services.node import NodeService
from monkey_island.cc.services.telemetry.processing.utils import (
    get_edge_by_scan_or_exploit_telemetry,
)
from monkey_island.cc.services.telemetry.zero_trust_checks.machine_exploited import (
    check_machine_exploited,
)


def process_exploit_telemetry(telemetry_json):
    encrypt_exploit_creds(telemetry_json)
    edge = get_edge_by_scan_or_exploit_telemetry(telemetry_json)
    update_network_with_exploit(edge, telemetry_json)

    check_machine_exploited(
        current_monkey=Monkey.get_single_monkey_by_guid(telemetry_json["monkey_guid"]),
        exploit_successful=telemetry_json["data"]["exploitation_result"],
        exploiter=telemetry_json["data"]["exploiter"],
        target_ip=telemetry_json["data"]["machine"]["ip_addr"],
        timestamp=telemetry_json["timestamp"],
    )


def update_network_with_exploit(edge: EdgeService, telemetry_json):
    telemetry_json["data"]["info"]["started"] = dateutil.parser.parse(
        telemetry_json["data"]["info"]["started"]
    )
    telemetry_json["data"]["info"]["finished"] = dateutil.parser.parse(
        telemetry_json["data"]["info"]["finished"]
    )
    new_exploit = copy.deepcopy(telemetry_json["data"])
    new_exploit.pop("machine")
    new_exploit["timestamp"] = telemetry_json["timestamp"]
    edge.update_based_on_exploit(new_exploit)
    if new_exploit["exploitation_result"]:
        NodeService.set_node_exploited(edge.dst_node_id)


def encrypt_exploit_creds(telemetry_json):
    attempts = telemetry_json["data"]["attempts"]
    for i in range(len(attempts)):
        for field in ["password", "lm_hash", "ntlm_hash"]:
            credential = attempts[i][field]
            if credential:  # PowerShell exploiter's telem may have `None` here
                if len(credential) > 0:
                    attempts[i][field] = get_datastore_encryptor().encrypt(credential)
