import common.data.zero_trust_consts as zero_trust_consts
from monkey_island.cc.models.zero_trust.aggregate_finding import AggregateFinding, add_malicious_activity_to_timeline
from monkey_island.cc.models.zero_trust.event import Event


def test_machine_exploited(current_monkey, exploit_successful, exploiter, target_ip, timestamp):
    events = [
        Event.create_event(
            title="Exploit attempt",
            message="Monkey on {} attempted to exploit {} using {}.".format(
                current_monkey.hostname,
                target_ip,
                exploiter),
            event_type=zero_trust_consts.EVENT_TYPE_MONKEY_NETWORK,
            timestamp=timestamp
        )
    ]
    status = zero_trust_consts.STATUS_PASSED
    if exploit_successful:
        events.append(
            Event.create_event(
                title="Exploit success!",
                message="Monkey on {} successfully exploited {} using {}.".format(
                    current_monkey.hostname,
                    target_ip,
                    exploiter),
                event_type=zero_trust_consts.EVENT_TYPE_MONKEY_NETWORK,
                timestamp=timestamp)
        )
        status = zero_trust_consts.STATUS_FAILED

    AggregateFinding.create_or_add_to_existing(
        test=zero_trust_consts.TEST_MACHINE_EXPLOITED,
        status=status,
        events=events
    )

    add_malicious_activity_to_timeline(events)
