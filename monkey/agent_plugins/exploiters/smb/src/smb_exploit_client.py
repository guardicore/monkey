import logging
from typing import Optional

from impacket.smbconnection import SMBConnection

from common.credentials import Credentials
from common.event_queue import IAgentEventPublisher
from infection_monkey.i_puppet import TargetHost

from .smb_options import SMBOptions
from .smb_utils import create_smb_connection, logout_guest, smb_login

logger = logging.getLogger(__name__)


class SMBExploitClient:
    """Manages the SMB connection, Exploitation events"""

    def __init__(
        self,
        agent_event_publisher: IAgentEventPublisher,
    ):
        self._agent_event_publisher = agent_event_publisher
        self._smb: Optional[SMBConnection] = None

    def authenticate(self, host: TargetHost, options: SMBOptions, credentials: Credentials) -> bool:
        """Returns True if authentication succeeded, False otherwise
        Side effect: The SMB connection is established on success"""

        self._smb = create_smb_connection(host)
        if not self._smb:
            return False

        self._smb = smb_login(self._smb, credentials)
        if not self._smb:
            return False

        self._smb.setTimeout(options.smb_connect_timeout)

        if logout_guest(self._smb):
            return False

        return True
