from pathlib import PurePath
from typing import Sequence

from common import OperatingSystem
from common.common_consts import AGENT_OTP_ENVIRONMENT_VARIABLE
from common.types import AgentID
from infection_monkey.exploit import IAgentOTPProvider
from infection_monkey.model import CMD_PREFIX, DROPPER_ARG, RUN_MONKEY, SET_OTP_WINDOWS
from infection_monkey.utils.commands import build_monkey_commandline


def build_powershell_command(
    agent_id: AgentID,
    servers: Sequence[str],
    current_depth: int,
    operating_system: OperatingSystem,
    remote_agent_binary_destination_path: PurePath,
    otp_provider: IAgentOTPProvider,
):
    if operating_system != OperatingSystem.WINDOWS:
        raise Exception(f"Unsupported operating system: {operating_system}")

    otp = SET_OTP_WINDOWS % {
        "agent_otp_environment_variable": AGENT_OTP_ENVIRONMENT_VARIABLE,
        "agent_otp": otp_provider.get_otp(),
    }

    monkey_params = build_monkey_commandline(
        agent_id, servers, current_depth + 1, remote_agent_binary_destination_path
    )
    monkey_execution_command = RUN_MONKEY % {
        "monkey_path": remote_agent_binary_destination_path,
        "monkey_type": DROPPER_ARG,
        "parameters": monkey_params,
    }
    return f"{CMD_PREFIX} {otp} {monkey_execution_command}"
