import pytest
from nmb.NetBIOS import NetBIOS

from common.utils.exceptions import DomainControllerNameFetchError
from infection_monkey.model.host import TargetHost

DOMAIN_NAME = "domain-name"
IP = "0.0.0.0"


@pytest.fixture
def host():
    return TargetHost(IP, DOMAIN_NAME)


def _get_stub_queryIPForName(netbios_names):
    def stub_queryIPForName(*args, **kwargs):
        return netbios_names

    return stub_queryIPForName


@pytest.mark.slow
def test_get_dc_details_multiple_netbios_names(host, monkeypatch):
    from infection_monkey.exploit.zerologon_utils.dc_utils import get_dc_details

    NETBIOS_NAMES = ["Name1", "Name2", "Name3"]

    stub_queryIPForName = _get_stub_queryIPForName(NETBIOS_NAMES)
    monkeypatch.setattr(NetBIOS, "queryIPForName", stub_queryIPForName)

    dc_ip, dc_name, dc_handle = get_dc_details(host)
    assert dc_ip == IP
    assert dc_name == NETBIOS_NAMES[0]
    assert dc_handle == f"\\\\{NETBIOS_NAMES[0]}"


@pytest.mark.slow
def test_get_dc_details_no_netbios_names(host, monkeypatch):
    from infection_monkey.exploit.zerologon_utils.dc_utils import get_dc_details

    NETBIOS_NAMES = []

    stub_queryIPForName = _get_stub_queryIPForName(NETBIOS_NAMES)
    monkeypatch.setattr(NetBIOS, "queryIPForName", stub_queryIPForName)
    with pytest.raises(DomainControllerNameFetchError):
        dc_ip, dc_name, dc_handle = get_dc_details(host)
