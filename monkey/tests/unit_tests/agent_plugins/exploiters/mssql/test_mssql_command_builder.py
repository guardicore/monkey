from pathlib import PureWindowsPath
from unittest.mock import MagicMock

import pytest
from agent_plugins.exploiters.mssql.src.mssql_command_builder import (
    build_mssql_agent_download_command,
    build_mssql_agent_launch_command,
)

from common.command_builder import (
    DropperExecutionMode,
    IWindowsAgentCommandBuilder,
    WindowsDownloadMethod,
    WindowsDownloadOptions,
    WindowsRunOptions,
    WindowsShell,
)

DOWNLOAD_URL = "http://some_link.com"
AGENT_EXE_PATH = PureWindowsPath("C:\\agent.exe")


@pytest.fixture
def windows_agent_command_builder() -> IWindowsAgentCommandBuilder:
    return MagicMock(spec=IWindowsAgentCommandBuilder)


def test_download_command(windows_agent_command_builder: IWindowsAgentCommandBuilder):
    command = build_mssql_agent_download_command(
        DOWNLOAD_URL, AGENT_EXE_PATH, windows_agent_command_builder
    )

    expected_download_options = WindowsDownloadOptions(
        agent_destination_path=AGENT_EXE_PATH,
        download_method=WindowsDownloadMethod.WEB_CLIENT,
        download_url=DOWNLOAD_URL,
    )

    assert command.startswith("xp_cmdshell")
    windows_agent_command_builder.build_download_command.assert_called_with(
        expected_download_options
    )
    windows_agent_command_builder.get_command.assert_called_once()
    windows_agent_command_builder.reset_command.assert_called_once()


def test_launch_command(windows_agent_command_builder: IWindowsAgentCommandBuilder):
    command = build_mssql_agent_launch_command(AGENT_EXE_PATH, windows_agent_command_builder)
    expected_run_options = WindowsRunOptions(
        agent_destination_path=AGENT_EXE_PATH,
        dropper_execution_mode=DropperExecutionMode.DROPPER,
        shell=WindowsShell.CMD,
    )

    assert command.startswith("xp_cmdshell")
    windows_agent_command_builder.build_run_command.assert_called_with(expected_run_options)
    windows_agent_command_builder.get_command.assert_called_once()
