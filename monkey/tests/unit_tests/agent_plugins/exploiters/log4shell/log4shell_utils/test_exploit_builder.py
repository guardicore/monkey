import pytest
from agent_plugins.exploiters.log4shell.src.log4shell_utils import (
    LINUX_EXPLOIT_TEMPLATE_PATH,
    InvalidExploitTemplateError,
    build_exploit_bytecode,
)


@pytest.fixture
def payload():
    return "bash -c 'touch /tmp/exploit-test'"


@pytest.fixture
def invalid_templates_dir(data_for_tests_dir):
    return data_for_tests_dir / "invalid_log4j_bytecode_templates"


def test_inject_command(payload):
    expected_bytecode = b"\x21" + payload.encode() + b"\x0c"

    exploit_bytecode = build_exploit_bytecode(payload, LINUX_EXPLOIT_TEMPLATE_PATH)
    assert expected_bytecode in exploit_bytecode


def test_missing_injection_tag(invalid_templates_dir, payload):
    with pytest.raises(InvalidExploitTemplateError):
        build_exploit_bytecode(payload, invalid_templates_dir / "MissingTag.class")


def test_uncompiled_java_class(invalid_templates_dir, payload):
    with pytest.raises(InvalidExploitTemplateError):
        build_exploit_bytecode(payload, invalid_templates_dir / "SourceCode.java")
