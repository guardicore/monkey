import pytest
from agent_plugins.exploiters.log4shell.src.log4shell_options import Log4ShellOptions

LOG4SHELL_OPTIONS_DICT = {
    "target_ports": [1234],
    "try_all_discovered_http_ports": True,
    "exploit_download_timeout": 10.0,
    "agent_binary_download_timeout": 60.0,
}
LOG4SHELL_OPTIONS_OBJECT = Log4ShellOptions(
    target_ports=[1234],
    try_all_discovered_http_ports=True,
    exploit_download_timeout=10.0,
    agent_binary_download_timeout=60.0,
)

TARGET_PORTS_EXCEPTION = {"target_ports": [-1, 70000]}
EXPLOIT_DOWNLOAD_TIMEOUT_EXCEPTION = {"exploit_download_timeout": 0}
AGENT_DOWNLOAD_TIMEOUT_EXCEPTION = {"agent_binary_download_timeout": -100}


def test_log4shell_options__serialization():
    assert LOG4SHELL_OPTIONS_OBJECT.to_json_dict() == LOG4SHELL_OPTIONS_DICT


def test_log4shell_options__full_serialization():
    assert Log4ShellOptions(**LOG4SHELL_OPTIONS_OBJECT.to_json_dict()) == LOG4SHELL_OPTIONS_OBJECT


def test_hadoop_options__deserialization():
    assert Log4ShellOptions(**LOG4SHELL_OPTIONS_DICT) == LOG4SHELL_OPTIONS_OBJECT


def test_log4shell_options__default():
    log4shell_options = Log4ShellOptions()

    assert log4shell_options.target_ports == [8000, 8080, 8983, 9600]
    assert log4shell_options.try_all_discovered_http_ports is False
    assert log4shell_options.exploit_download_timeout == 5.0
    assert log4shell_options.agent_binary_download_timeout == 15.0


@pytest.mark.parametrize(
    "options_dict",
    [
        TARGET_PORTS_EXCEPTION,
        EXPLOIT_DOWNLOAD_TIMEOUT_EXCEPTION,
        AGENT_DOWNLOAD_TIMEOUT_EXCEPTION,
    ],
)
def test_log4shell_options_constrains(options_dict):
    with pytest.raises(ValueError):
        Log4ShellOptions(**options_dict)
