import pytest
from agent_plugins.exploiters.ssh.src.ssh_options import SSHOptions

SSH_CONNECT_TIMEOUT = 42.1

SSH_OPTIONS_DICT = {
    "connect_timeout": SSH_CONNECT_TIMEOUT,
}

SSH_OPTIONS_OBJECT = SSHOptions(
    connect_timeout=SSH_CONNECT_TIMEOUT,
)

SSH_TIMEOUT_EXCEPTION_TOO_LOW = {"connect_timeout": 0}
SSH_TIMEOUT_EXCEPTION_TOO_HIGH = {"connect_timeout": 101}


def test_ssh_options__serialization():
    assert SSH_OPTIONS_OBJECT.to_json_dict() == SSH_OPTIONS_DICT


def test_ssh_options__full_serialization():
    assert SSHOptions(**SSH_OPTIONS_OBJECT.to_json_dict()) == SSH_OPTIONS_OBJECT


def test_ssh_options__deserialization():
    assert SSHOptions(**SSH_OPTIONS_DICT) == SSH_OPTIONS_OBJECT


def test_ssh_options__default():
    ssh_options = SSHOptions()

    assert ssh_options.connect_timeout == 15.0


@pytest.mark.parametrize(
    "options_dict",
    [
        SSH_TIMEOUT_EXCEPTION_TOO_LOW,
        SSH_TIMEOUT_EXCEPTION_TOO_HIGH,
    ],
)
def test_ssh_options_constrains(options_dict):
    with pytest.raises(ValueError):
        SSHOptions(**options_dict)
