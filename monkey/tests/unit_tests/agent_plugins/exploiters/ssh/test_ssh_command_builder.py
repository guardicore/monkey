from ipaddress import IPv4Address
from pathlib import PurePosixPath
from typing import Optional
from unittest.mock import MagicMock

import pytest
from agent_plugins.exploiters.ssh.src.ssh_command_builder import build_ssh_command

from common import OperatingSystem
from infection_monkey.exploit import IAgentOTPProvider
from infection_monkey.i_puppet import TargetHost
from infection_monkey.model import MONKEY_ARG
from infection_monkey.utils.ids import get_agent_id

AGENT_ID = get_agent_id()
SERVERS = ["127.0.0.1", "192.168.1.1"]
DEPTH = 2
AGENT_EXE_PATH = PurePosixPath("C:\\agent.exe")
OTP = "123456"


@pytest.fixture
def otp_provider() -> IAgentOTPProvider:
    provider = MagicMock(spec=IAgentOTPProvider)
    provider.get_otp.return_value = OTP
    return provider


@pytest.mark.parametrize("os", [OperatingSystem.LINUX, None])
def test_command(otp_provider: IAgentOTPProvider, os: Optional[OperatingSystem]):
    target_host = TargetHost(ip=IPv4Address("127.0.0.1"), operating_system=os)

    command = build_ssh_command(
        AGENT_ID,
        target_host,
        SERVERS,
        DEPTH,
        AGENT_EXE_PATH,
        otp_provider,
    )

    assert MONKEY_ARG in command
    assert str(AGENT_ID) in command
    assert all([server in command for server in SERVERS])
    assert str(DEPTH + 1) in command
    assert str(AGENT_EXE_PATH) in command
    assert OTP in command
