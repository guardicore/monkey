from ipaddress import IPv4Address
from pathlib import PurePosixPath
from unittest.mock import MagicMock

import pytest
from agent_plugins.exploiters.snmp.src.snmp_command_builder import build_snmp_command
from agentpluginapi import TargetHost
from monkeytypes import OperatingSystem

from common.command_builder import (
    DropperExecutionMode,
    ILinuxAgentCommandBuilder,
    LinuxDownloadMethod,
    LinuxDownloadOptions,
    LinuxRunOptions,
)

SCRIPT_PATH = PurePosixPath("/tmp/agent")
TARGET_HOST = TargetHost(ip=IPv4Address("1.1.1.1"), operating_system=OperatingSystem.LINUX)
DOWNLOAD_URL = "1.1.1.1/agent"


@pytest.fixture
def linux_agent_command_builder() -> ILinuxAgentCommandBuilder:
    return MagicMock(spec=ILinuxAgentCommandBuilder)


def test_command(monkeypatch, linux_agent_command_builder: ILinuxAgentCommandBuilder):
    monkeypatch.setattr(
        "agent_plugins.exploiters.snmp.src.snmp_command_builder.get_dropper_script_dst_path",
        lambda _: SCRIPT_PATH,
    )
    command = build_snmp_command(
        TargetHost(ip=IPv4Address("1.1.1.1"), operating_system=OperatingSystem.LINUX),
        DOWNLOAD_URL,
        linux_agent_command_builder,
    )

    expected_download_options = LinuxDownloadOptions(
        download_method=LinuxDownloadMethod.WGET,
        download_url=DOWNLOAD_URL,
        agent_destination_path=SCRIPT_PATH,
    )

    expected_run_options = LinuxRunOptions(
        dropper_execution_mode=DropperExecutionMode.SCRIPT, agent_destination_path=SCRIPT_PATH
    )

    assert command.startswith('-c "')
    assert command.endswith('"')
    linux_agent_command_builder.build_download_command.assert_called_with(expected_download_options)
    linux_agent_command_builder.build_run_command.assert_called_with(expected_run_options)
    linux_agent_command_builder.get_command.assert_called_once()
