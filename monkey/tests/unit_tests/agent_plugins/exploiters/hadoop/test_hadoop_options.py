import pydantic
import pytest
from agent_plugins.exploiters.hadoop.src.hadoop_options import HadoopOptions

TARGET_PORTS = [22, 80, 443, 2222]
REQUEST_TIMEOUT = 11.2
DOWNLOAD_TIMEOUT = 44
YARN_SUFFIX = "m0nk3y"


HADOOP_OPTIONS_DICT = {
    "target_ports": TARGET_PORTS,
    "request_timeout": REQUEST_TIMEOUT,
    "agent_binary_download_timeout": DOWNLOAD_TIMEOUT,
    "yarn_application_suffix": YARN_SUFFIX,
}


HADOOP_OPTIONS_OBJECT = HadoopOptions(
    target_ports=TARGET_PORTS,
    request_timeout=REQUEST_TIMEOUT,
    agent_binary_download_timeout=DOWNLOAD_TIMEOUT,
    yarn_application_suffix=YARN_SUFFIX,
)

TARGET_PORTS_EXCEPTION = {"target_ports": [-1, 70000]}
REQUEST_TIMEOUT_EXCEPTION = {"request_timeout": 0}
DOWNLOAD_TIMEOUT_EXCEPTION = {"agent_binary_download_timeout": -100}


def test_hadoop_options__serialization():
    assert HADOOP_OPTIONS_OBJECT.dict(simplify=True) == HADOOP_OPTIONS_DICT


def test_hadoop_options__full_serialization():
    assert HadoopOptions(**HADOOP_OPTIONS_OBJECT.dict(simplify=True)) == HADOOP_OPTIONS_OBJECT


def test_hadoop_options__deserialization():
    assert HadoopOptions(**HADOOP_OPTIONS_DICT) == HADOOP_OPTIONS_OBJECT


def test_hadoop_options__default():
    hadoop_options = HadoopOptions()

    assert hadoop_options.target_ports == [8088]
    assert hadoop_options.request_timeout == 15.0
    assert hadoop_options.agent_binary_download_timeout == 60.0
    assert hadoop_options.yarn_application_suffix == "M0NK3Y3XPL01T"


@pytest.mark.parametrize(
    "options_dict",
    [
        TARGET_PORTS_EXCEPTION,
        REQUEST_TIMEOUT_EXCEPTION,
        DOWNLOAD_TIMEOUT_EXCEPTION,
    ],
)
def test_hadoop_options_constrains(options_dict):
    with pytest.raises((pydantic.errors.NumberNotGeError, pydantic.errors.NumberNotGtError)):
        HadoopOptions(**options_dict)
