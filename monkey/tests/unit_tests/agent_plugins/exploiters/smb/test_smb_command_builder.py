from pathlib import PureWindowsPath

import pytest
from agent_plugins.exploiters.smb.src.smb_command_builder import build_smb_command

from common import OperatingSystem
from infection_monkey.model import DROPPER_ARG, MONKEY_ARG

DROPPER_EXE_PATH = PureWindowsPath("C:\\dropper.exe")
AGENT_EXE_PATH = PureWindowsPath("C:\\agent.exe")


def test_exception_raised_for_linux():
    with pytest.raises(Exception):
        build_smb_command(
            ["127.0.0.1"],
            2,
            OperatingSystem.LINUX,
            DROPPER_EXE_PATH,
            AGENT_EXE_PATH,
        )


@pytest.mark.parametrize(
    "remote_agent_binary_full_path,remote_agent_binary_destination_path,",
    [
        (DROPPER_EXE_PATH, AGENT_EXE_PATH),
        (AGENT_EXE_PATH, AGENT_EXE_PATH),
    ],
)
def test_servers(
    remote_agent_binary_full_path: PureWindowsPath,
    remote_agent_binary_destination_path: PureWindowsPath,
):
    servers = ["127.0.0.1", "192.168.1.100", "172.1.2.3"]
    command = build_smb_command(
        servers, 2, OperatingSystem.WINDOWS, DROPPER_EXE_PATH, AGENT_EXE_PATH
    )

    for s in servers:
        assert s in command


def test_dropper_used():
    command = build_smb_command(
        ["127.0.0.1"],
        2,
        OperatingSystem.WINDOWS,
        DROPPER_EXE_PATH,
        AGENT_EXE_PATH,
    )

    assert DROPPER_ARG in command


def test_monkey_used():
    command = build_smb_command(
        ["127.0.0.1"],
        2,
        OperatingSystem.WINDOWS,
        AGENT_EXE_PATH,
        AGENT_EXE_PATH,
    )

    assert MONKEY_ARG in command
