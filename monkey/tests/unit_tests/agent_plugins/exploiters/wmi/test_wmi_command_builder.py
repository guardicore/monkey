from pathlib import PureWindowsPath

import pytest
from agent_plugins.exploiters.wmi.src.wmi_command_builder import build_wmi_command

from infection_monkey.model import DROPPER_ARG, MONKEY_ARG
from infection_monkey.utils.ids import get_agent_id

DROPPER_EXE_PATH = PureWindowsPath("C:\\dropper.exe")
AGENT_EXE_PATH = PureWindowsPath("C:\\agent.exe")
OTP = "123456"
AGENT_ID = get_agent_id()


@pytest.mark.parametrize(
    "remote_agent_binary_full_path,remote_agent_binary_destination_path,",
    [
        (DROPPER_EXE_PATH, AGENT_EXE_PATH),
        (AGENT_EXE_PATH, AGENT_EXE_PATH),
    ],
)
def test_servers(
    remote_agent_binary_full_path: PureWindowsPath,
    remote_agent_binary_destination_path: PureWindowsPath,
):
    servers = ["127.0.0.1", "192.168.1.100", "172.1.2.3"]
    command = build_wmi_command(
        AGENT_ID,
        servers,
        2,
        DROPPER_EXE_PATH,
        AGENT_EXE_PATH,
    )

    for s in servers:
        assert s in command


def test_dropper_used():
    command = build_wmi_command(
        AGENT_ID,
        ["127.0.0.1"],
        2,
        DROPPER_EXE_PATH,
        AGENT_EXE_PATH,
    )

    assert DROPPER_ARG in command


def test_monkey_used():
    command = build_wmi_command(
        AGENT_ID,
        ["127.0.0.1"],
        2,
        AGENT_EXE_PATH,
        AGENT_EXE_PATH,
    )

    assert MONKEY_ARG in command


def test_otp_used():
    command = build_wmi_command(
        AGENT_ID,
        ["127.0.0.1"],
        2,
        AGENT_EXE_PATH,
        AGENT_EXE_PATH,
    )

    assert OTP in command
