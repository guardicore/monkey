from pathlib import PureWindowsPath
from unittest.mock import MagicMock

import pytest
from agent_plugins.exploiters.powershell.src.powershell_command_builder import (
    build_powershell_command,
)

from infection_monkey.exploit import IAgentOTPProvider
from infection_monkey.model import DROPPER_ARG
from infection_monkey.utils.ids import get_agent_id

DROPPER_EXE_PATH = PureWindowsPath("C:\\dropper.exe")
OTP = "123456"
AGENT_ID = get_agent_id()


@pytest.fixture
def otp_provider() -> IAgentOTPProvider:
    provider = MagicMock(spec=IAgentOTPProvider)
    provider.get_otp.return_value = OTP
    return provider


def test_servers(otp_provider: IAgentOTPProvider, agent_otp_environment_variable):
    servers = ["127.0.0.1", "192.168.1.100", "172.1.2.3"]
    command = build_powershell_command(
        AGENT_ID,
        servers,
        2,
        DROPPER_EXE_PATH,
        agent_otp_environment_variable,
        otp_provider,
    )

    for s in servers:
        assert s in command


def test_dropper_used(otp_provider: IAgentOTPProvider, agent_otp_environment_variable):
    command = build_powershell_command(
        AGENT_ID,
        ["127.0.0.1"],
        2,
        DROPPER_EXE_PATH,
        agent_otp_environment_variable,
        otp_provider,
    )

    assert DROPPER_ARG in command


def test_otp_used(otp_provider: IAgentOTPProvider, agent_otp_environment_variable):
    command = build_powershell_command(
        AGENT_ID,
        ["127.0.0.1"],
        2,
        DROPPER_EXE_PATH,
        agent_otp_environment_variable,
        otp_provider,
    )

    assert OTP in command
