import pytest
from agent_plugins.exploiters.powershell.src.powershell_client import format_password
from pydantic import SecretStr

from common.credentials import Credentials, LMHash, NTHash, Password, SSHKeypair, Username


def test_format_cached_credentials():
    expected = None
    creds = Credentials(identity=Username(username="test_user"), secret=expected)

    actual = format_password(creds)

    assert expected == actual


def test_format_password():
    expected = SecretStr("test_password")
    creds = Credentials(identity=Username(username="test_user"), secret=Password(password=expected))

    actual = format_password(creds)

    assert expected.get_secret_value() == actual


def test_format_lm_hash():
    lm_hash = SecretStr("c080132b6f2a0c4e5d1029cc06f48a92")
    expected = f"{lm_hash.get_secret_value()}:00000000000000000000000000000000"
    creds = Credentials(identity=Username(username="test_user"), secret=LMHash(lm_hash=lm_hash))

    actual = format_password(creds)

    assert expected == actual


def test_format_nt_hash():
    nt_hash = SecretStr("c080132b6f2a0c4e5d1029cc06f48a92")
    expected = f"00000000000000000000000000000000:{nt_hash.get_secret_value()}"

    creds = Credentials(identity=Username(username="test_user"), secret=NTHash(nt_hash=nt_hash))

    actual = format_password(creds)

    assert expected == actual


def test_invalid_secret_type():
    creds = Credentials(
        identity=Username(username="test_user"),
        secret=SSHKeypair(public_key="pkey", private_key="private_key"),
    )

    with pytest.raises(ValueError):
        format_password(creds)
