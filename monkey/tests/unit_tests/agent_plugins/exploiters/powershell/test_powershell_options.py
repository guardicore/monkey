import pytest
from agent_plugins.exploiters.powershell.src.powershell_options import PowerShellOptions

CONNECTION_TIMEOUT = 11.2


POWERSHELL_OPTIONS_DICT = {
    "winrm_connect_timeout": CONNECTION_TIMEOUT,
}


POWERSHELL_OPTIONS_OBJECT = PowerShellOptions(
    winrm_connect_timeout=CONNECTION_TIMEOUT,
)


CONNECTION_TIMEOUT_EXCEPTION = {"winrm_connect_timeout": 0}


def test_powershell_options__serialization():
    assert POWERSHELL_OPTIONS_OBJECT.model_dump(mode="json") == POWERSHELL_OPTIONS_DICT


def test_powershell_options__full_serialization():
    assert (
        PowerShellOptions(**POWERSHELL_OPTIONS_OBJECT.model_dump(mode="json"))
        == POWERSHELL_OPTIONS_OBJECT
    )


def test_powershell_options__deserialization():
    assert PowerShellOptions(**POWERSHELL_OPTIONS_DICT) == POWERSHELL_OPTIONS_OBJECT


def test_powershell_options__default():
    powershell_options = PowerShellOptions()

    assert powershell_options.winrm_connect_timeout == 3.0


@pytest.mark.parametrize(
    "options_dict",
    [
        CONNECTION_TIMEOUT_EXCEPTION,
    ],
)
def test_powershell_options_constraints(options_dict):
    with pytest.raises(ValueError):
        PowerShellOptions(**options_dict)
