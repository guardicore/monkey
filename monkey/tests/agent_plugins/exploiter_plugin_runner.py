from io import BytesIO
from ipaddress import IPv4Address
from multiprocessing import Event
from typing import Any, Dict
from unittest.mock import MagicMock
from uuid import UUID

from agent_plugins.exploiters.hadoop.src.plugin import Plugin

from common import OperatingSystem
from common.event_queue import IAgentEventPublisher
from infection_monkey.exploit import IAgentBinaryRepository
from infection_monkey.model import TargetHost
from infection_monkey.network import TCPPortSelector

host = TargetHost(ip=IPv4Address("10.2.2.2"), operating_system=OperatingSystem.LINUX, icmp=True)
options: Dict[str, Any] = {}
agent_binary_repository = MagicMock(spec=IAgentBinaryRepository)
agent_binary_repository.get_agent_binary.return_value = BytesIO(b"M0nk3y was here")
agent_event_publisher = MagicMock(spec=IAgentEventPublisher)
tcp_port_selector = MagicMock(spec=TCPPortSelector)
tcp_port_selector.get_free_tcp_port.return_value = 12345

# These parameters don't matter because we won't be executing the agent
servers = ["localhost"]
current_depth = -1
interrupt = Event()
agent_id = UUID("67460e74-02e3-11e8-b443-00163e990bdb")

plugin = Plugin(
    plugin_name="Test",
    agent_id=agent_id,
    agent_event_publisher=agent_event_publisher,
    agent_binary_repository=agent_binary_repository,
    tcp_port_selector=tcp_port_selector,
)

exploiter_result_data = plugin.run(
    host=host,
    servers=servers,
    current_depth=current_depth,
    options={},
    interrupt=interrupt,
)

print(exploiter_result_data)
