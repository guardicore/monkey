from unittest import TestCase
from .payload_parsing import Payload, LimitedSizePayload


class TestPayload(TestCase):
    def test_get_payload(self):
        test_str1 = "abc"
        test_str2 = "atc"
        payload = Payload(command="b", prefix="a", suffix="c")
        assert payload.get_payload() == test_str1 and payload.get_payload("t") == test_str2

    def test_is_suffix_and_prefix_too_long(self):
        pld_fail = LimitedSizePayload("b", 2, "a", "c")
        pld_success = LimitedSizePayload("b", 3, "a", "c")
        assert pld_fail.is_suffix_and_prefix_too_long() and not pld_success.is_suffix_and_prefix_too_long()

    def test_split_into_array_of_smaller_payloads(self):
        test_str1 = "123456789"
        pld1 = LimitedSizePayload(test_str1, max_length=16, prefix="prefix", suffix="suffix")
        array1 = pld1.split_into_array_of_smaller_payloads()
        test1 = bool(array1[0] == "prefix1234suffix" and
                     array1[1] == "prefix5678suffix" and
                     array1[2] == "prefix9suffix")

        test_str2 = "12345678"
        pld2 = LimitedSizePayload(test_str2, max_length=16, prefix="prefix", suffix="suffix")
        array2 = pld2.split_into_array_of_smaller_payloads()
        test2 = bool(array2[0] == "prefix1234suffix" and
                     array2[1] == "prefix5678suffix" and len(array2) == 2)

        assert test1 and test2
