#! /bin/bash

# Export APPRUN if running from an extracted image
self="$(readlink -f -- $0)"
here="${self%/*}"
APPDIR="${APPDIR:-${here}}"

# Export SSL certificate
export SSL_CERT_FILE="${APPDIR}/opt/_internal/certs.pem"

if [ "$1" == "service" ]; then
    exec /bin/bash "${APPDIR}/install-infection-monkey-service.sh" ${@:2}
fi

# Check if running as root
if [ $(id -u) -eq 0 ]; then
    echo "AppImage: Warning: running as root is not recommended. You should instead run the AppImage as a regular user."
    echo "AppImage: If you want to run the Agent as root, do so by choosing manual run mode."
fi

# Call the entry point
for opt in "$@"; do
    [ "${opt:0:1}" != "-" ] && break
    if [[ "${opt}" =~ "I" ]] || [[ "${opt}" =~ "E" ]]; then
        # Environment variables are disabled ($PYTHONHOME). Let's run in a safe
        # mode from the raw Python binary inside the AppImage
        "$APPDIR/opt/python3.11/bin/python3.11" "$@"
        exit "$?"
    fi
done

# Save HOME and USER because capsh changes them. Until ubuntu adds --noenv option we have to rely on a workaround
export HOME_ORIGINAL=$HOME
export USER_ORIGINAL=$USER

export PYTHONNOUSERSITE=1

(PYTHONHOME="${APPDIR}/opt/python3.11" exec sudo capsh --keep=1 --user=${USER_ORIGINAL} --inh=cap_net_bind_service --addamb=cap_net_bind_service -- -c "env HOME=${HOME_ORIGINAL} USER=${USER_ORIGINAL} ${APPDIR}/opt/python3.11/bin/python3.11 ${APPDIR}/usr/src/monkey_island.py" $@)

exit "$?"
